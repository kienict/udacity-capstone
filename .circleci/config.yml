version: 2.1

commands:
  destroy-environment:
    description: Destroy resources while deploy fail.
    parameters:
      cluster_name:
        type: string
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            eksctl delete cluster --region=us-east-1 --name=<<parameters.cluster_name>>
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  docker: circleci/docker@2.1.2
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  run-lint:
    docker:
      - image: 'python:3.7.3-stretch'
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: 'v1-dependencies-{{ checksum "requirements.txt" }}'
      - run:
          name: Run lint
          command: |
            . venv/bin/activate
            make lint

  docker-build:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - docker/build:
          image: kienpv5/udacityfinalapp
          tag: "1.0"
          
      - docker/push:
          image: kienpv5/udacityfinalapp
          tag: "1.0"

  eks-deploy:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-cli/setup
      - aws-eks/create-cluster:
          cluster-name: udacity-capstone-project
          nodegroup-name: udacity-capstone-project-nodes
          node-type: t3.medium
          nodes-min: 2
          nodes-max: 3
      - destroy-environment:
          cluster_name: udacity-capstone-project

  run-app-deploy:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: udacity-capstone-project
          install-kubectl: true
      - run:
          name: Test Kubernetes
          command: |  
            kubectl get services
            kubectl get nodes

      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: ".circleci/files/deployment.yml"
          resource-name: deployment/udacityfinalproject
          show-kubectl-command: true

      - kubernetes/create-or-update-resource:
          resource-file-path: ".circleci/files/service.yml"
          show-kubectl-command: true

      - run:
          name: Check deploy status
          command: kubectl get svc udacityfinalproject

  run-test:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: udacity-capstone-project
          install-kubectl: true
      - run:
          name: Balance Test
          command: |
            sleep 60
            EXTERNAL_IP=$(kubectl get service udacityfinalproject | awk '{print $4}' | tail -n 1)
            echo "${EXTERNAL_IP}"
            if curl --insecure --silent --retry 6 http://${EXTERNAL_IP} | grep "KienPV"
            then
              echo "[INFO] PASSED."
              exit 0
            else
              echo "[ERROR] FAILED."
              exit 1
            fi
workflows:
  deployment:
    jobs:
      - run-lint
      - docker-build:
          requires: [run-lint]
      - eks-deploy:
          requires: [docker-build]
      - run-app-deploy:
          requires: [eks-deploy]
      - run-test:
          requires: [run-app-deploy]